(function(r,t){typeof exports=="object"&&typeof module!="undefined"?t(exports):typeof define=="function"&&define.amd?define(["exports"],t):(r=typeof globalThis!="undefined"?globalThis:r||self,t(r["form-validation"]={}))})(this,function(r){"use strict";var G=Object.defineProperty,H=Object.defineProperties;var J=Object.getOwnPropertyDescriptors;var w=Object.getOwnPropertySymbols;var Q=Object.prototype.hasOwnProperty,R=Object.prototype.propertyIsEnumerable;var x=(r,t,o)=>t in r?G(r,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):r[t]=o,k=(r,t)=>{for(var o in t||(t={}))Q.call(t,o)&&x(r,o,t[o]);if(w)for(var o of w(t))R.call(t,o)&&x(r,o,t[o]);return r},O=(r,t)=>H(r,J(t));const t="form-validation",o="[data-validation]",T="[data-mask]";function _({main:c,elm:l,state:s,on:f,emit:v,dependencies:F,trigger:I}){var A;const{validations:p,masks:D}=F,m=(A=l.querySelector("input,select,textarea"))==null?void 0:A.form;let g=y(m);c(e=>{f("input","input, textarea, select",z),f("input",T,q),f("focus",o,K),f("input",o,b("input")),f("change",o,b("change")),f("blur",o,b("blur")),m.addEventListener("reset",P),m.addEventListener("submit",$),N()});const N=()=>{if(!p)throw new Error("<form-validation> - No validations provided in dependencies");const e=S();s.set(n=>n.form.fields=e)},S=()=>{const e={};return g.forEach(n=>e[n]=""),e},b=e=>n=>{const a=n.target,d=a.name,u=M(a,m),E=a.dataset.validation.split(/\s/),h=[],L=s.get();E.forEach(i=>{if(i in p){const{ok:B,message:C}=p[i](u,a,m);B||h.push(C)}}),h.length?e==="input"?(g.add(a.name),s.set(i=>{i.form.isValid=!1,L.form.errors[d]&&h[0]!=L.form.errors[d]&&(i.form.errors[d]=h[0])})):(e==="blur"||e==="change")&&(g.add(a.name),s.set(i=>{i.form.errors[d]=h[0],i.form.isValid=!1})):(g.delete(a.name),s.set(i=>{delete i.form.errors[d],g.size||(i.form.isValid=!0)}))},z=e=>{const{name:n}=e.target,a=M(e.target,m);s.set(d=>d.form.fields[n]=a)},$=e=>{e.preventDefault(),I("blur",o);const a=s.get().form.errors;if(Object.keys(a).length)v(`${t}:error`,{errors:a});else{const u=j(e.target);v(`${t}:submit`,k({},u))}},q=e=>{let n=e.target.value;const{mask:a}=e.target.dataset;a.split(/s/).forEach(u=>{if(u&&u in D){const E=D[u];n=E(n,e.target,e.target.form)}}),s.set(u=>u.form.fields[e.target.name]=n||"")},K=e=>{s.set(n=>n.form.touched[e.target.name]=!0)},P=()=>{g=y(l),s.set({form:O(k({},V.form),{fields:S()})})}}const V={form:{errors:{},fields:{},touched:{},isValid:!1}},j=c=>{const l=new FormData(c),s={};for(let[f,v]of l)s[f]=v;return{formData:l,data:s}},M=(c,l)=>{const{name:s,type:f}=c;return f=="checkbox"?c.checked?c.value:"":l[s].value},y=c=>{const l=new Set;return Array.from(c.elements).forEach(s=>l.add(s.name)),l};r.default=_,r.model=V,Object.defineProperties(r,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
